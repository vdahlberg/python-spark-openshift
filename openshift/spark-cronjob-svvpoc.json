{
   "kind": "Template",
   "apiVersion": "v1",
   "metadata": {
      "name": "oshinko-bc-is-spark-cronjob",
      "annotations": {
         "description": "Creates a bc,is,cronjob and service."
      }
   },
   "labels": {
      "application": "oshinko-spark",
      "createdBy": "template-bc-is-spark-cronjob"
   },
   "parameters": [
	  {
         "description": "The name to to use for the buildconfig,imagestream and job",
         "name": "APPLICATION_NAME",
         "generate": "expression",
         "from": "python-spark-[a-z0-9]{4}",
         "required": true
      },
      {
         "description": "The name of the main py file to run. If this is not specified and there is a single py file at top level of the git respository, that file will be chosen.",
         "name": "APP_FILE"
      },
      {
         "description": "Git source URI for application",
         "name": "GIT_URI"
      },
      {
         "description": "Git branch/tag reference",
         "name": "GIT_REF",
         "value": "master"
      },
      {
         "description": "Git sub-directory path",
         "name": "CONTEXT_DIR"
      },
      {
         "description": "Command line arguments to pass to the application",
         "name": "APP_ARGS"
      },
      {
         "description": "Application main class for jar-based applications",
         "name": "APP_MAIN_CLASS"
      },
      {
         "description": "Docker registry, docker-registry.default.svc or 172.30.1.1:5000. (Needed beacuse imagestreams are not supported in non-openshift resources.)",
         "name": "REGISTRY"
		 "required": true
      },
      {
         "description": "Namespace (Needed beacuse imagestreams are not supported in non-openshift resources.)",
         "name": "NAMESPACE"
		 "required": true
      },
      {
         "description": "List of additional spark options to pass to spark-submit (for exmaple --conf property=value --conf property=value). Note, --master and --class are set by the launcher and should not be set here",
         "name": "SPARK_OPTIONS",
		 "value": "--packages org.apache.hadoop:hadoop-azure:2.7.0,com.microsoft.azure:azure-storage:2.0.0,com.microsoft.sqlserver:mssql-jdbc:7.0.0.jre8",
		 "required": true
      },
      {
        "description": "The desired number of successful completions",
        "name": "COMPLETIONS",
        "value": "1",
        "required": true
      },
      {
         "description": "The name of the spark cluster to run against. The cluster will be created if it does not exist, and a random cluster name will be chosen if this value is left blank.",
         "name": "OSHINKO_CLUSTER_NAME"
      },
       {
	  "description": "The name of a stored cluster configuration to use if a cluster is created, default is 'default'.",
         "name": "OSHINKO_NAMED_CONFIG"
      },
      {
         "description": "The name of a configmap to use for the spark configuration of the driver. If this configmap is empty the default spark configuration will be used.",
         "name": "OSHINKO_SPARK_DRIVER_CONFIG"
      },
      {

         "description": "If a cluster is created on-demand, delete the cluster when the application finishes if this option is set to 'true'",
         "name": "OSHINKO_DEL_CLUSTER",
         "value": "true",
         "required": true
      },
	  {
		 "description": "CronJob schedule in cron format (https://en.wikipedia.org/wiki/Cron)",
		 "name": "CRON_SCHEDULE",
		 "value": "*/10 * * * *",
		 "required": true
	  },
	  {
		 "description": "Concurrency Policy for job. 'Allow', 'Forbid' or 'Replace'. (https://kubernetes.io/docs/tasks/job/automated-tasks-with-cron-jobs/)",
		 "name": "CONCURRENCY_POLICY",
		 "value": "Forbid",
		 "required": true
	  },
	  {
		 "description": "Amount of successful jobs to store.",
		 "name": "SUCCESS_HISTORY",
		 "value": "3",
		 "required": true
	  },
	  {
		 "description": "Amount of failed jobs to store.",
		 "name": "FAIL_HISTORY",
		 "value": "1",
		 "required": true
	  },
	  {
		 "description": "Storage access key for Azure BLOB",
		 "name": "AZURE_STORAGE_ACCESS_KEY",
		 "required": true
	  },
	  {
		 "description": "Azure SQL host",
		 "name": "AZURE_SQL_HOST",
		 "value": "svvpocsql1.database.windows.net",
		 "required": true
	  },
	  {
		 "description": "Azure SQL port",
		 "name": "AZURE_SQL_PORT",
		 "value": "1433",
		 "required": true
	  },
	  {
		 "description": "Azure SQL DB",
		 "name": "AZURE_SQL_DB",
		 "value": "svvpocdb1",
		 "required": true
	  },
	  {
		 "description": "Azure SQL Username",
		 "name": "AZURE_SQL_UNAME",
		 "value": "svvpocadmin@svvpocsql1",
		 "required": true
	  },
	  {
		 "description": "Azure SQL Password",
		 "name": "AZURE_SQL_PASSWD",
		 "required": true
	  }
   ],
   "objects": [
	  {
         "kind": "ImageStream",
         "apiVersion": "v1",
         "metadata": {
            "name": "${APPLICATION_NAME}"
         },
         "spec": {
            "dockerImageRepository": "${APPLICATION_NAME}",
            "lookupPolicy": {
                "local": true
            },
            "tags": [
               {
                  "name": "latest"
               }
            ]
         }
      },{
         "kind": "BuildConfig",
         "apiVersion": "v1",
         "metadata": {
            "name": "${APPLICATION_NAME}"
         },
         "spec": {
            "triggers": [
               {
                  "type": "ConfigChange"
               },
               {
                  "type": "GitHub",
                  "github": {
                      "secret": "${APPLICATION_NAME}"
                  }
               }
            ],
            "source": {
               "type": "Git",
               "git": {
                  "uri": "${GIT_URI}",
                  "ref": "${GIT_REF}"
               },
               "contextDir": "${CONTEXT_DIR}"
            },
            "strategy": {
               "type": "Source",
               "sourceStrategy": {
                  "from": {
                     "kind": "DockerImage",
                     "name": "radanalyticsio/radanalytics-pyspark-py36"
                  },
                  "forcePull": true,
                  "env": [
                     {
                        "name": "APP_FILE",
                        "value": "${APP_FILE}"
                     }
                  ]
               }
            },
            "output": {
               "to": {
                  "kind": "ImageStreamTag",
                  "name": "${APPLICATION_NAME}:latest"
               }
            }
         }
      },
      {
          "apiVersion": "batch/v1beta1",
          "kind": "CronJob",
          "metadata": {
              "name": "${APPLICATION_NAME}-cronjob"
          },
		  "spec": {
			  "schedule": "${CRON_SCHEDULE}",
			  "concurrencyPolicy": "${CONCURRENCY_POLICY}",
			  "successfulJobsHistoryLimit": "${SUCCESS_HISTORY}",
			  "failedJobsHistoryLimit": "${FAIL_HISTORY}",
			  "jobTemplate": {
				  "spec": {
					  "completions": "${COMPLETIONS}",
					  "parallelism": 1,
					  "template": {
						  "metadata": {
							  "name": "${APPLICATION_NAME}-cronjob",
							  "labels": {
								 "radanalytics.io/Job": "${APPLICATION_NAME}-cronjob"
							  }
						  },
						  "spec": {
							  "containers": [
								  {
									  "image": "${REGISTRY}/${NAMESPACE}/${APPLICATION_NAME}:latest",
									  "name": "${APPLICATION_NAME}-cronjob",
									  "env": [
										{
										   "name": "APPLICATION_NAME",
										   "value": "${APPLICATION_NAME}-cronjob"
										},
										{
										   "name": "DRIVER_HOST",
										   "value": "${APPLICATION_NAME}-headless"
										},
										{
										   "name": "OSHINKO_CLUSTER_NAME",
										   "value": "${OSHINKO_CLUSTER_NAME}"
										},
										{
										   "name": "APP_ARGS",
										   "value": "${APP_ARGS}"
										},
										{
										   "name": "SPARK_OPTIONS",
										   "value": "${SPARK_OPTIONS}"
										},
										{
										   "name": "APP_MAIN_CLASS",
										   "value": "${APP_MAIN_CLASS}"
										},
										{
										   "name": "OSHINKO_DEL_CLUSTER",
										   "value": "${OSHINKO_DEL_CLUSTER}"
										},
										{
										   "name": "APP_EXIT",
										   "value": "true"
										},
										{
										   "name": "OSHINKO_NAMED_CONFIG",
										   "value": "${OSHINKO_NAMED_CONFIG}"
										},
										{
										   "name": "POD_NAME",
										   "valueFrom":
											 {
												"fieldRef":
												   {
													  "fieldPath": "metadata.name"
												   }
											 }
										},
										{
											"name": "AZURE_STORAGE_ACCESS_KEY",
											"value": "${AZURE_STORAGE_ACCESS_KEY}"
										},
										{
											"name": "AZURE_SQL_HOST",
											"value": "${AZURE_SQL_HOST}"
										},
										{
											"name": "AZURE_SQL_DB",
											"value": "${AZURE_SQL_DB}"
										},
										{
											"name": "AZURE_SQL_PORT",
											"value": "${AZURE_SQL_PORT}"
										},
										{
											"name": "AZURE_SQL_UNAME",
											"value": "${AZURE_SQL_UNAME}"
										},
										{
											"name": "AZURE_SQL_PASSWD",
											"value": "${AZURE_SQL_PASSWD}"
										}
									  ],
									  "volumeMounts": [
										{
										   "mountPath": "/etc/podinfo",
										   "name": "podinfo",
										   "readOnly": false
										}
									  ]
								  }
							  ],
							  "volumes": [
								 {
									"downwardAPI": {
									   "items": [
										  {
											 "fieldRef": {
												"fieldPath": "metadata.labels"
											 },
											 "path": "labels"
										  }
									   ]
									},
									"name": "podinfo"
								 }
							  ],
							  "restartPolicy": "Never",
							  "serviceAccount": "oshinko"
						  }
					  }
				  }
			  }
          }
      },
      {
         "kind": "Service",
         "apiVersion": "v1",
         "metadata": {
            "name": "${APPLICATION_NAME}-headless"
         },
         "spec": {
             "clusterIP": "None",
             "ports": [
                 {
                     "name": "driver-rpc-port",
                     "port": 7078,
                     "protocol": "TCP",
                     "targetPort": 7078
                 },
                 {
                     "name": "blockmanager",
                     "port": 7079,
                     "protocol": "TCP",
                     "targetPort": 7079
                 }
             ],
             "selector": {
                 "radanalytics.io/Job": "${APPLICATION_NAME}"
             }
         }
      }
   ]
}

